---
description: 가독성, 예측 가능성, 응집성 등 코드 품질 향상을 위한 전반적인 코딩 원칙 및 가이드라인
globs: *.ts,*.tsx
alwaysApply: true
---
# 코드 품질 가이드

## 가독성 (Readability)
- 매직 넘버는 상수로 정의
- 복잡한 로직은 전용 컴포넌트/훅으로 분리
- 조건부 렌더링은 별도 컴포넌트로 분리
- 복잡한 삼항 연산자는 if/else로 대체
- 간단한 로직은 인라인으로 정의
- 복잡한 조건은 의미 있는 변수명으로 분리

## 예측 가능성 (Predictability)
- 함수/훅의 반환 타입 일관성 유지
- 함수는 단일 책임만 수행
- 이름은 고유하고 명확하게 지정
- 숨겨진 로직/부수 효과 최소화

## 응집성 (Cohesion)
- 관련 코드는 가까이 배치
- 도메인/기능별로 디렉토리 구성
- 매직 넘버는 관련 로직 근처에 정의
- 폼 로직은 필드/폼 레벨로 적절히 분리

## 결합도 (Coupling)
- 불필요한 추상화 지양
- 상태 관리는 작은 단위로 분리
- Props Drilling 대신 컴포넌트 합성 사용
- 도메인별로 독립적인 구조 유지

## 변경하기 쉬운 코드
- 코드의 의도를 명확하게 표현
- 코드의 맥락을 쉽게 파악할 수 있도록 구성
- 변경이 필요한 부분을 쉽게 찾을 수 있도록 구조화

## 코드 리뷰 관점
- 코드의 의도가 명확한가?
- 코드의 맥락을 쉽게 파악할 수 있는가?
- 변경이 필요한 부분을 쉽게 찾을 수 있는가?

## 코드 구조화
- 관련된 코드는 가까이 배치
- 코드의 흐름을 자연스럽게 구성
- 복잡한 로직은 작은 단위로 분리

## 주의사항
1. 코드의 의도를 명확하게 표현
2. 코드의 맥락을 쉽게 파악할 수 있도록 구성
3. 변경이 필요한 부분을 쉽게 찾을 수 있도록 구조화
4. 코드 리뷰 시 위 관점들을 고려

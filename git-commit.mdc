---
description: git action
globs: 
alwaysApply: false
---
# Git 커밋 규칙

## 커밋 메시지 형식
```
<타입>(<범위>): <설명>

예시:
- feat(node): 노드 추가 기능 구현
- fix(edge): 엣지 연결 버그 수정
- refactor(flow): Flow 로직 리팩토링
```

## 커밋 타입
| 타입 | 설명 |
|------|------|
| build | 빌드 시스템, 외부 종속성에 영향을 주는 작업 |
| ci | ci 구성 파일, 스크립트 변경 |
| docs | md와 같은 documentation의 변경 |
| feat | 새로운 기능 추가 |
| fix | 버그 수정 |
| perf | 성능 개선 작업 |
| refactor | 리팩토링 작업(코드 동작은 유지하되, 코드의 가독성과 유지보수성을 높이기 위해 내부구조 변경) |
| test | 테스트 코드 추가, 기존 테스트 수정 |
| revert | 커밋 취소 |

## 커밋 범위
- 파일 이름, 디렉토리 이름, 특정 기능
- 넣지 않아도 됨

## 주의사항
1. 커밋 메시지는 현재형으로 작성
2. 첫 글자는 소문자로 작성
3. 마지막에 마침표(.)를 붙이지 않음
4. 커밋 메시지 양식에 맞추지 않을 경우 husky에서 메시지 양식 검사하여 커밋 거부

